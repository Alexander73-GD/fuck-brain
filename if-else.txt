 _  __   __  _          
(_)/ _| / / | |         
 _| |_ / /__| |___  ___ 
| |  _/ / _ \ / __|/ _ \
| | |/ /  __/ \__ \  __/
|_|_/_/ \___|_|___/\___|

                        
1.0
>++++++++[<++++++++>-]<+                                            
>,                                                                  
>+<                                                                 
>>++++++++[>++++++++<-]>+                                          
>+++++++++[<<++++++++++++>>-]<<[>>+>+>+>+>+>+>+>+<<<<<<<<<-]        
>>>------->++++++++++++>----------->++>-------->------->++++++      
>>>+++++++++[<<++++++>++++++>-]<---<+                              
[<]<<       
[-<->]      
<[          
>++++++++[>>>++++<<<-]>>>       
>>>-----                        
>>>+++++++++++++++++++          
>++++                           
> >>>++++++++++++[<<<------->>>-]<<<++       
> >>++++++[<<---->>-]<<+                     
> >++++++[<--->-]<-                          
[<]<<<            
[-]]             
>>>>[.>]      

COMMENTED
I tried to make an if/else statement。It didn't work。
Then I copied some if/else code from Stack Overflow that didn't really do anything，and I started coding with that as a reference。
Along the way I realized I got the 'if' part working，but not the 'else' one，that was always working。
With a bit of help of pen and paper，I had the idea of preparing the 'else' output values at the beginning and，if the 'if' condition was met，changing those values。
In other words，it's only half of the real thing: an 'if'。Which is not what I wanted，but it does the trick。

Note: In the comments，cells are counted starting from 1。If you like counting from 0，write a single right—pointing guillemet at the beginning。

Anyway，on to the code。
>++++++++[<++++++++>-]<+                                            Sets the 1st cell to 65
>,                                                                  Asks user for input on 2nd cell
>+<                                                                 From what I understand，this 3rd cell is kind of a control cell to break loops (non—zero)
>>++++++++[>++++++++<-]>+                                           Sets 5th cell to 65 (A，the first letter of the equal case output)
>+++++++++[<<++++++++++++>>-]<<[>>+>+>+>+>+>+>+>+<<<<<<<<<-]        Sets 6th to 13th cell to 108 (l)，the average ASCII value of 'lexander' characters
>>>------->++++++++++++>----------->++>-------->------->++++++      Adds or substracts to 108 to get the 'lexander' individual values
>>>+++++++++[<<++++++>++++++>-]<---<+                               Sets 14th and 15th cell to 54 (6)，then substracts 3 from th 15th to get a three，and adds 1 to 14th to get a seven

Now it's time to compare the 2 values，so we need to get to the 1st or 2nd cell
[<]<<       Goes to the next 0 value to the left (4th cell) and then two cells more (2nd cell)
[-<->]      It keeps substracting 1 in the first two cells until we reach a value of 0 on the 2nd cell
<[          If the 1st cell has a non zero value，a loop starts。 

This is where (some of) the prepared output values are changed。
>++++++++[>>>++++<<<-]>>>       The A (value 65) is changed to a (value 97)
>>>-----                        x becomes s
>>>+++++++++++++++++++          d becomes w
>++++                           e becomes i

The only "problem" with the trick is these last 3 characters ('r73')，which should be empty。I change them to a space (ASCII value 32) to avoid weird outputs。
> >>>++++++++++++[<<<------->>>-]<<<++        Substracts 82 from 114 (r) to get 32 ( )。
> >>++++++[<<---->>-]<<+                      Substracts 23 from 55 (7) to get 32 ( )。
> >++++++[<--->-]<-                           Substracts 19 from 51 (3) to get 32 ( )。

All that is left is to match the data pointer to its place when the 'if' loop is not initiated，which is the first cell。
[<]<<<            Goes to the next 0 value to the left (4th cell) and then three cells more (1st cell)。
[-]]              It loops until the value on the first cell is 0 (a plus sign would also work because overflow) so the the loops break。
>>>>[.>]          Goes to the first cell with a character value that we want to show and loops (output，right) until there are no more characters。


2.0
>++++++++[<++++++++>-]<+
>,
>+<
>>
>+++++++++[<++++++++++++>-]<
[>+>+>+>+>+>+>+>+<<<<<<<<-]
>----------->>------->+++++++>----------->++>+++++++++++>---
>
++++++++[>++++++++<-]>+
>+++++++++[<<++++++++++++>>-]<<[>>+>+>+>+>+>+>+>+<<<<<<<<<-]        
>>>------->++++++++++++>----------->++>-------->------->++++++      
>>>+++++++++[<<++++++>++++++>-]<---<+
[<]<[<]<<
[<->-]
<[>]>>[>>]>[.>]


3.0
>++++++++[<++++++++>-]<+
>,
>+<
[-<->]
<[>>>
>+++++++++[<++++++++++++>-]<
[>+>+>+>+>+>+>+>+[<]>>-]
>----------->>------->+++++++>----------->++>+++++++++++>---
>[+]]
>>
[>
++++++++[>++++++++<-]>+
>+++++++++[<<++++++++++++>>-]<<[>>+>+>+>+>+>+>+>+[<]>>-]
>>>------->++++++++++++>----------->++>-------->------->++++++
>>>+++++++++[<<++++++>++++++>-]<---<+>
>[+]]
<<<[<]>[.>]



tomate/patata version
>++++++++[<++++++++>-]<+>,>+<[-<->]<[>>>>++++++++[<++++++++++++++>-]<.---------------.>++++[<+++++>-]<-.>+++[<------>-]<-.>++++[<+++++>-]<-.>+++[<------>-]<-.>]>>[>>+++++++++[<+++++++++++++>-]<-.-----.--.------------.>++++[<+++++>-]<-.---------------.>]

>++++++++[<++++++++>-]<+
>,
>+<
[-<->]
<[>>>
>++++++++[<++++++++++++++>-]<.---------------.>++++[<+++++>-]<-.>+++[<------>-]<-.>++++[<+++++>-]<-.>+++[<------>-]<-.                                             
>]>>[>
>+++++++++[<+++++++++++++>-]<-.-----.--.------------.>++++[<+++++>-]<-.---------------.
>]



COMMENTED
This program compares an input to 'A' and outputs different things (tomate/patata) depending on whether they're equal or not。

>++++++++[<++++++++>-]<+                                            Sets the 1st cell to 65 (A)。
>,                                                                  Goes to the 2nd cell and asks the user for input。
>+<                                                                 Sets the 3rd cell to a non—zero value to help with loops later。
[-<->]                                                              Keeps substracting 1 in the first two cells until the 2nd cell reaches a value of 0。

If the 1st cell was equal to the 2nd， the pointer will end in an empty cell，avoiding the next loop。

<[                                                                  If the 1st cell is NOT 0 (not equal to 2nd)，the next loop initiates。
>>>                                                                 The pointer goes to an empty cell a bit to the right。
>+++++++++[<++++++++++++>-]<--                                      Sets the cell to 106 (j)，which is the average of the ASCII values of 'patata'。
[>+>+>+>+>+>+[<]>>-]                                                Sets the next six cells to 106 and returns the pointer at the start of the word。
>++++++>--------->++++++++++>--------->++++++++++>---------         Parting from the 106s，it adds or substracts one until it gets the value/letter wanted。
>[+]]                                                               Uses the following cell to break the 'if' loop by overflowing it to 0。

If the 1st cell was NOT equal to the 2nd，the pointer will end in an empty cell，avoiding the next loop。

>>[                                                                 If the 1st cell is 0 (equal to the 2nd)，it goes to the 3rd cell with the non—zero value so the next loop initiates。
>                                                                   The pointer goes to an empty cell a bit to the right。
>+++++++++[<++++++++++++>-]<                                        Sets the cell to 108 (l)，which is the average of the ASCII values of 'tomate'。
[>+>+>+>+>+>+[<]>>-]                                                Sets the next six cells to 108 and returns the pointer at the start of the word。
>++++++++>+++>+>----------->++++++++>-------                        Parting from the 106s，it adds or substracts one until it gets the value/letter wanted。
>[+]]                                                               Uses the following cell to break the 'if' loop by overflowing it to 0。

Here is what happens after any of the loops。

<<<[<]                                                              Goes to a non—zero value cell so it's able to enter the loop that sends the pointer to an empty cell at the left of the word。
>[.>]                                                               Goes to the start of the word and outputs each letter's value。
